// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define default 0
#define left    1
#define right   2
#define tri     3
#define tech    4

// Home row mods macro
//#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
//#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    //  behaviors {
    //      ht: hold_tap { 
    //          label = "hold_tap";
    //          compatible = "zmk,behavior-hold-tap";
    //          #binding-cells = <2>;
    //          flavor = "tap-preferred";
    //          tapping-term-ms = <220>;
    //          quick-tap-ms = <150>;
    //          require-prior-idle-ms = <100>;
    //          bindings = <&kp>, <&kp>;
    //      };
    //  };
    //    };

    combos {
        compatible = "zmk,combos";

        layer_3 {
            bindings = <&mo 3>;
            key-positions = <30 31>;
        };

        lvl_4 {
            bindings = <&mo 4>;
            key-positions = <17 18>;
        };

        lang_swap {
            bindings = <&kp LG(SPACE)>;
            key-positions = <22 23>;
        };

 alt_enter {
            bindings = <&kp LA(ENTER)>;
            key-positions = <21 22 23>;
        };
comb_ctr_z {
            bindings = <&kp LC(Z)>;
            key-positions = <22 23 24>;
        };
    };
 comb_pass {
            bindings = <&kp LS(P) &kp LS(O) &kp LS(L) &kp J &kp I &kp N9 &kp N8 &kp AMPS &kp U &kp K>;
            key-positions = <01 02 03>;
        };
    behaviors {
        TD_b: TD_b {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_B";
            #binding-cells = <0>;
            bindings = <&kp M>, <&kp RBKT>;
        };

       // morf_1: morf_1 {
        //    compatible = "zmk,behavior-mod-morph";
        //    label = "MORF_1";
         //   bindings = <&kp SPACE>, <&kp ESC>;

         //   #binding-cells = <0>;
         //   mods = <(MOD_RSFT)>;
       // };

      //  morf_2: morf_2 {
      //      compatible = "zmk,behavior-mod-morph";
      //      label = "MORF_2";
      //      bindings = <&kp SPACE>, <&kp LEFT_GUI>;

       //     #binding-cells = <0>;
       //     mods = <(MOD_LSFT|MOD_RSFT)>;
      //  };

        TD_X: TD_X {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_X";
            #binding-cells = <0>;
            bindings = <&kp O>, <&kp P>, <&kp LEFT_BRACKET>;
        };

        TD_IE: TD_IE {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_IE";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp SQT>;
        };

       // TD_A: TD_A {
        //    compatible = "zmk,behavior-tap-dance";
        //    label = "TD_A";
       //     #binding-cells = <0>;
        //    bindings = <&kp A>, <&none>, <&kp LC(A)>;
       // };

       // TD_S: TD_S {
       //     compatible = "zmk,behavior-tap-dance";
       //     label = "TD_S";
       //     #binding-cells = <0>;
       //     bindings = <&kp S>, <&none>, <&kp LS(LEFT_ALT)>;
       // };

       // TD_V: TD_V {
       //     compatible = "zmk,behavior-tap-dance";
       //     label = "TD_V";
       //     #binding-cells = <0>;
       //     bindings = <&kp V>, <&none>, <&kp LC(V)>;
       // };

        TD_X1: TD_X1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_X1";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp LEFT_BRACKET>;
        };

       // TD_Z: TD_Z {
       //     compatible = "zmk,behavior-tap-dance";
       //     #binding-cells = <0>;
       //     bindings = <&kp Z>, <&none>, <&kp LC(Z)>;
       // };

        TD_QW: TD_QW {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QW";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp Q>;
        };

        TD_9: TD_9 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_9";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_9>, <&kp NUMBER_0>;
        };
    };

    macros {
        Pass_mcr: Pass_mcr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(P) &kp LS(O) &kp LS(L) &kp J &kp I &kp N9 &kp N8 &kp AMPS &kp U &kp K>;
            label = "PASS_MCR";
        };

        lang_tog: lang_tog {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT)>;
            label = "LANG_TOG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESC Q  &kp W        &kp E        &kp R             &kp T              &kp Y               &kp U              &kp I      &kp O    &TD_X1
&kp A      &kp S        &kp D        &mt LEFT_SHIFT F  &kp G              &kp H               &mt RIGHT_SHIFT J  &kp K      &kp L    &TD_IE
&kp Z      &kp X        &kp C        &kp V             &kp B              &kp N               &TD_b              &kp COMMA  &kp DOT  &kp FSLH
                                     &lt 2 ENTER       &mt LCTRL SPACE    &mt LEFT_GUI SPACE  &lt 1 BSPC
            >;
        };

        right_layer {
            bindings = <
&kp INS       &kp F1  &kp F2   &kp F3        &kp F4     &kp PAGE_UP  &kp HOME        &kp UP_ARROW    &kp END          &kp DELETE
&kp TAB       &kp F5  &kp F6   &kp F7        &kp F8     &kp PG_DN    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp RIGHT_SHIFT
&kp LEFT_ALT  &kp F9  &kp F10  &kp F11       &kp F12    &kp LCTRL    &kp LEFT_SHIFT  &none          &none           &none
                               &kp LEFT_GUI  &kp ESC    &none       &none
            >;
        };

        left_layer {
            bindings = <
&kp N1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5      &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0
&kp EXCL  &kp AT        &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp TAB   &caps_word    &kp ESCAPE    &kp PIPE      &kp MINUS         &kp PLUS      &kp EQUAL      &kp UNDER     &kp PIPE              &kp FSLH
                                      &none        &none    &kp SPACE     &kp BSPC
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &none  &none  &none      &bt BT_SEL 0    &Pass_mcr          &kp LC(LA(DELETE))  &none  &none  &none
&bootloader  &none  &none  &none      &bt BT_SEL 1    &kp C_VOL_UP       &kp LG(LS(S))       &none  &none  &none
&none       &none  &none  &bt BT_CLR  &bt BT_SEL 2    &kp C_VOLUME_DOWN  &none    &none  &none  &none
                             &none      &none          &none        &none
            >;
        };

        tech_layer {
            bindings = <
&kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &none            &none        &none         &none  &none  &none
&trans            &kp S              &kp D           &trans           &trans            &trans        &trans         &none  &none  &none
&kp Z             &kp X              &kp LC(LS(C))   &kp LC(LS(V))    &kp LGUI          &kp LEFT_ALT  &kp TAB        &none  &none  &none
                                                     &kp LCTRL        &kp LEFT_SHIFT    &kp DELETE    &kp BACKSPACE
            >;
        };
    };
};
