// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LEFT    1
#define RIGHT   2
#define TRI     3
#define TECH    4

// Home row mods macro
//#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
//#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    //  behaviors {
    //      ht: hold_tap { 
    //          label = "hold_tap";
    //          compatible = "zmk,behavior-hold-tap";
    //          #binding-cells = <2>;
    //          flavor = "tap-preferred";
    //          tapping-term-ms = <220>;
    //          quick-tap-ms = <150>;
    //          require-prior-idle-ms = <100>;
    //          bindings = <&kp>, <&kp>;
    //      };
    //  };
    //    };

    combos {
        compatible = "zmk,combos";

        layer_3 {
            bindings = <&mo 3>;
            key-positions = <30 31>;
        };

        lvl_4 {
            bindings = <&mo 4>;
            key-positions = <17 18>;
        };
    };

    behaviors {
        TD_b: TD_b {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_B";
            #binding-cells = <0>;
            bindings = <&kp M>, <&kp RBKT>;
        };

        morf_1: morf_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_1";
            bindings = <&kp SPACE>, <&kp ESC>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        morf_2: morf_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_2";
            bindings = <&kp SPACE>, <&kp LEFT_GUI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        TD_X: TD_X {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_X";
            #binding-cells = <0>;
            bindings = <&kp O>, <&kp P>, <&kp LEFT_BRACKET>;
        };

        TD_IE: TD_IE {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_IE";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp SQT>;
        };

        TD_A: TD_A {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_A";
            #binding-cells = <0>;
            bindings = <&kp A>, <&none>, <&kp LC(A)>;
        };

        TD_S: TD_S {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_S";
            #binding-cells = <0>;
            bindings = <&kp S>, <&none>, <&kp LS(LEFT_ALT)>;
        };

        TD_V: TD_V {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_V";
            #binding-cells = <0>;
            bindings = <&kp V>, <&none>, <&kp LC(V)>;
        };

        TD_X1: TD_X1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_X1";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp LEFT_BRACKET>;
        };

        TD_Z: TD_Z {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_Z";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&none>, <&kp LC(Z)>;
        };

        TD_QW: TD_QW {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QW";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp Q>;
        };

        TD_9: TD_9 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_9";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_9>, <&kp NUMBER_0>;
        };
    };

    macros {
        Pass_mcr: Pass_mcr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(P) &kp LS(O) &kp LS(L) &kp J &kp I &kp N9 &kp N8 &kp AMPS &kp U &kp K>;
            label = "PASS_MCR";
        };

        lang_tog: lang_tog {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT)>;
            label = "LANG_TOG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W        &kp E        &kp R             &kp T      &kp Y    &kp U              &kp I      &kp O    &TD_X1
&TD_A               &TD_S        &kp D        &mt LEFT_SHIFT F  &kp G      &kp H    &mt RIGHT_SHIFT J  &kp K      &kp L    &TD_IE
&mt LEFT_CONTROL Z  &mt LC(X) X  &mt LC(C) C  &mt LC(V) V       &kp B      &kp N    &TD_b              &kp COMMA  &kp DOT  &kp FSLH
                                              &lt 2 ENTER       &morf_2    &morf_1  &lt 1 BSPC
            >;
        };

        right_layer {
            bindings = <
&kp INS     &kp F1  &kp F2   &kp F3        &kp F4     &kp PAGE_UP  &kp HOME        &kp UP          &kp END          &kp LG(DELETE)
&kp DEL     &kp F5  &kp F6   &kp F7        &kp F8     &kp PG_DN    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp RIGHT_SHIFT
&caps_word  &kp F9  &kp F10  &kp F11       &kp F12    &kp LCTRL    &kp LEFT_SHIFT  &trans          &trans           &trans
                             &kp LEFT_GUI  &kp ESC    &trans       &trans
            >;
        };

        left_layer {
            bindings = <
&kp N1          &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5      &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0
&kp EXCL        &kp AT        &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_SHIFT  &caps_word    &kp ESCAPE    &kp PIPE      &kp MINUS         &kp PLUS      &kp EQUAL      &kp UNDER     &kp PIPE              &kp FSLH
                                            &trans        &kp LANGUAGE_2    &kp SPACE     &kp BSPC
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &Pass_mcr          &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &kp C_VOL_UP       &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &kp C_VOLUME_DOWN  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans             &trans
            >;
        };

        tech_layer {
            bindings = <
&trans  &trans  &trans  &trans     &trans            &trans        &trans         &trans  &trans  &trans
&trans  &kp S   &kp D   &trans     &trans            &trans        &trans         &trans  &trans  &trans
&kp Z   &kp X   &kp C   &kp V      &kp LGUI          &kp LEFT_ALT  &kp TAB        &trans  &trans  &trans
                        &kp LCTRL  &kp LEFT_SHIFT    &kp DELETE    &kp BACKSPACE
            >;
        };
    };
};
