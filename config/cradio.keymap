// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LEFT    1
#define RIGHT   2
#define TRI     3
#define TECH    4

// Home row mods macro
//#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
//#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    //  behaviors {
    //      ht: hold_tap { 
    //          label = "hold_tap";
    //          compatible = "zmk,behavior-hold-tap";
    //          #binding-cells = <2>;
    //          flavor = "tap-preferred";
    //          tapping-term-ms = <220>;
    //          quick-tap-ms = <150>;
    //          require-prior-idle-ms = <100>;
    //          bindings = <&kp>, <&kp>;
    //      };
    //  };
    //    };

    combos {
        compatible = "zmk,combos";

        layer_3 {
            bindings = <&mo 3>;
            key-positions = <33 30>;
        };
    };

    behaviors {
        TD_0: TD_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_0";
            #binding-cells = <0>;
            bindings = <&kp M>, <&kp RBKT>;
        };
    };

    macros {
        Pass_mcr: Pass_mcr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(P) &kp LS(O) &kp LS(L) &kp J &kp I &kp N9 &kp N8 &kp AMPS &kp U &kp K>;
            label = "PASS_MCR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R        &kp T        &kp Y      &kp U       &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F        &kp G        &kp H      &kp J       &kp K      &kp L    &kp SQT
&kp Z  &kp X  &kp C  &kp V        &kp B        &kp N      &TD_0       &kp COMMA  &kp DOT  &kp FSLH
                     &lt 2 ENTER  &kp SPACE    &kp SPACE  &lt 1 BSPC
            >;
        };

        right_layer {
            bindings = <
&kp INS     &kp N1  &kp N2  &kp N3  &trans     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END   &kp COLON
&kp DEL     &kp N4  &kp N5  &kp N6  &trans     &kp LARW  &kp DARW   &kp UARW   &kp RARW  &kp SEMI
&caps_word  &kp N7  &kp N8  &kp N9  &kp N0     &trans    &trans     &trans     &trans    &trans
                            &trans  &kp ESC    &trans    &trans
            >;
        };

        left_layer {
            bindings = <
&kp N1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp EXCL  &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &kp ASTRK     &kp MINUS     &kp EQUAL     &kp BSLH      &kp GRAVE
&trans    &trans        &trans        &trans        &trans          &kp AMPS      &kp UNDER     &kp PLUS      &kp PIPE      &trans
                                      &trans        &trans          &trans        &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &Pass_mcr  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans     &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans     &trans  &trans  &trans  &trans
                             &trans      &trans          &trans     &trans
            >;
        };
    };
};
